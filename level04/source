#include <signal.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <sys/prctl.h>
#include <sys/wait.h>
#include <unistd.h>
#include <sys/ptrace.h>

int main(int argc, char ** argv)
{
    int pid = fork();
    char str[32];
    
	unsigned int stat_loc = 0;
    if (pid != 0)
	{
        while (true)
		{
            wait(&stat_loc);
            if ((stat_loc % 12) >= 1)
            {
                puts("child is exiting...");
                return 0;
            }
            if (ptrace(PTRACE_PEEKUSER) == 11)
            {
                break;
            }
            continue;
        }
        puts("no exec() for you");
        kill(pid, SIGKILL);
    }
	else
	{
        int v;
        prctl(PR_SET_PDEATHSIG, 1, 0, 0, &v);
        ptrace(PTRACE_TRACEME);
        puts("Give me some shellcode, k");
        gets(str);
    }
    return 0;
}